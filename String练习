public class HomeWork {
    //实现方法 compareTo, 能够实现按照字典序比较字符串大小
    public static void compareTo(String str,String str2){
        char[] ch = str.toCharArray();
        char[] ch2 = str2.toCharArray();
        int A = 0;
        int B = 0;
        for(int i = 0;i < str.length();i++){

            A = Integer.valueOf(ch[i]) + A;
        }
        for(int i = 0;i < str2.length();i++){

            B = Integer.valueOf(ch[i]) + B;
        }
        if( A > B ){
            System.out.println("str字符串大");
        }
        System.out.println("str2字符串大");
    }
    //实现方法 contains, 能够判定字符串中是否包含子串
    public static boolean contains(String str,String key){
        char[] ch1 = str.toCharArray();//原字符串
        char[] ch2 = key.toCharArray();//寻找的目标字符
        int i = 0;
        int j = str.length() - 1;
        int x = 0;
        for (i = 0; i < j; i++){//基础循环
            if(ch1[i] == ch2[x]) {
                while (ch1[i] == ch2[x] && x < key.length() - 1 ) {//同时满足字符相等，和所找字串的位置确定
                    x++;//继续判断
                    i++;
                }
                if(ch1[i] == ch2[x]){
                    return true;
            }
            }
        }
        return false;
        }

    //实现方法 indexOf, 能够找出字符串子串存在的位置
    private static int indexOf(String str,String key) {
        char[] ch1 = str.toCharArray();//原字符串
        char[] ch2 = key.toCharArray();//寻找的目标字符
        int i = 0;
        int j = str.length() - 1;
        int count = 0;
        int x = 0;
        for (i = 0; i < j; i++){//基础循环
            if(ch1[i] == ch2[x]) {
                while (ch1[i] == ch2[x] && x < key.length() - 1) {//同时满足字符相等，和所找字串的位置确定
                    x++;//继续判断
                    i++;
                }
            }
            count++;//从头计数，寻找所在位置
    }
        return count;
    }
    //实现方法 replace, 能够替换字符串中的某个部分
  /*  public  static String replace(String str,String key){
        char[] ch1 = str.toCharArray();//原字符串
        char[] ch2 = key.toCharArray();//寻找的目标字符
        int i = 0;
        int j = str.length() - 1;
        int x = 0;
        for (i = 0; i < j; i++){//基础循环
            if(ch1[i] == ch2[x]) {
                while (ch1[i] == ch2[x] && x < key.length() - 1) {//同时满足字符相等，和所找字串的位置确定
                    x++;//继续判断
                    i++;
                }
            }
        }
    }*/
    //实现方法 split, 能够指定分割符将字符串拆分成字符串数组(不必支持正则表达式)
    public static void split(String str){
        char[] ch = str.toCharArray();
        for(int i = 0;i <= str.length()-1;i++){

        }
    }
    public static void main(String[] args) {
        String str = "abcefwcd";
        String str2 = "abcf";
        System.out.println(contains(str, str2));
    }
    }
